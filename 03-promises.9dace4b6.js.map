{"mappings":"YAaA,SAASA,EAAWC,GAClBC,QAAQC,IAAIF,E,EAdD,CACXG,OAAQC,SAASC,cAAc,UAG5BF,OAAOG,iBAAiB,UAAU,SAACC,GACtCA,EAAMC,iBACN,IAoBWC,EAAOC,EAAMC,EAASC,EAE7BC,EADAC,EArBEC,EAAaR,EAAMS,OAAOC,SAASR,MAAMS,MACzCC,EAAYZ,EAAMS,OAAOC,SAASP,KAAKQ,MACvCE,EAAeb,EAAMS,OAAOC,SAASI,OAAOH,MAkBvCT,EAjBPM,EAiBcL,EAjBFS,EAiBQR,EAjBGS,EAiBMR,EAjBQb,EAkBrCe,EAAQ,EAEZQ,YAAW,WACTT,EAAKU,aAAY,WACfX,GAAUH,EAAQK,KAAWJ,GACzBI,KAAWH,GAAWa,cAAcX,E,GACxCH,E,GACDD,GAxBHF,EAAMS,OAAOS,O","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formEl: document.querySelector('form'),\n}\n\nrefs.formEl.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const firstDelay = event.target.elements.delay.value;\n  const delayStep = event.target.elements.step.value;\n  const countElement = event.target.elements.amount.value;\n  foo(firstDelay, delayStep, countElement, myCallback);\n  event.target.reset();\n})\n\nfunction myCallback(message) {\n  console.log(message);\n}\n\n// function foo(delay, delayStep, count, callback) {\n//   setTimeout(() => {\n//     for (let i = 0; i < count; i++) {\n//       setTimeout(() => { callback(i); }, i * delayStep);\n      \n//     }\n//   }, delay);\n// }\n\nfunction foo(delay, step, element, callback) {\n  let count = 0;\n  let id;\n  setTimeout(() => {\n    id = setInterval(() => {\n      callback(+delay + count++ * +step);\n      if (count === +element) { clearInterval(id); }\n    },step);\n  }, delay);\n}\n\n\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$ce04d3a99e08e73b$var$myCallback","message","console","log","formEl","document","querySelector","addEventListener","event","preventDefault","delay","step","element","callback","id","count","firstDelay","target","elements","value","delayStep","countElement","amount","setTimeout","setInterval","clearInterval","reset"],"version":3,"file":"03-promises.9dace4b6.js.map"}